; 3. Define a function to tests the membership of a node in a n-tree represented as (root list_of_nodes_subtree1 ... list_of_nodes_subtreen)
; Eg. tree is (a (b (c)) (d) (E (f))) and the node is "b" => true

(DEFUN search_node(L N)
	(COND
		((NULL L) 0)
		((EQUAL L N) 1)
		((ATOM L) 0)
		(t (mapcar #'(lambda(a) (search_node a N)) L))
	)
)

(defun sum(l)
	(cond
		((null l) 0)
		((numberp l) l)
		((atom l) 0)
		(t(apply '+ (mapcar #'sum l)))
	)
)

(defun check_(l e)
	(cond
		((null l) nil)
		((> (sum (search_node l e)) 0) 'true)
		(t 'false)
	)
)

(print (check_ '(a (q (b)) (d) (E (f))) 'b))
